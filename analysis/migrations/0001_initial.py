# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-14 12:10
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
from analysis.models import Lang, Plot, Symbol, StockSource
from django.core.management import call_command

def insertData(apps, schema_editor):
    lang = Lang(code='es', name='Español')
    lang.save()
    plots = [{
        'slug': 'ibex35-daily-rate', 
        'title': 'Cambio diario del IBEX 35'
    }, {
        'slug': 'ibex35-daily-rate-normality',
        'title': 'Cambio diario del IBEX 35 como distribución normal'
    }, {
        'slug': 'ibex35-daily-rate-laplacity',
        'title': 'Cambio diario del IBEX 35 como distribución de Laplace'
    }, {
        'slug': 'ibex35-adjusted-quote',
        'title': 'IBEX 35: cotización ajustada'
    }, {
        'slug': 'map-adjusted-quote',
        'title': 'Mapfre: cotización ajustada'
    }, {
        'slug': 'tef-adjusted-quote',
        'title': 'Telefónica: cotización ajustada'
    }]
    for plot in plots:
        Plot(slug=plot['slug'], title=plot['title'], lang_code_id='es').save()
    symbols = [{
        'market': 'Mercado Continuo',
        'ticker': 'ibex35',
        'name': 'IBEX 35'
    }, {
        'market': 'Mercado Continuo',
        'ticker': 'tef',
        'name': 'Telefónica'
    }, {
        'market': 'Mercado Continuo',
        'ticker': 'map',
        'name': 'Mapfre'
    }]
    for symbol in symbols:
        Symbol(ticker=symbol['ticker'], name=symbol['name']).save()
    invertia_tpl = 'https://www.invertia.com/es/mercados/bolsa/empresas/historico?p_p_id=cotizacioneshistoricas_WAR_ivfrontmarketsportlet&p_p_lifecycle=2&p_p_state=normal&p_p_mode=view&p_p_resource_id=exportExcel&p_p_cacheability=cacheLevelPage&p_p_col_id=column-1&p_p_col_pos=1&p_p_col_count=2&_cotizacioneshistoricas_WAR_ivfrontmarketsportlet_startDate={{startDate}}&_cotizacioneshistoricas_WAR_ivfrontmarketsportlet_endDate={{endDate}}&_cotizacioneshistoricas_WAR_ivfrontmarketsportlet_idtel={invertia_key}'
    stocksources = [{
        'symbol_id': Symbol.objects.get(ticker='tef').id,
        'key': 'RV011TELEFON', 
    }, {
        'symbol_id': Symbol.objects.get(ticker='map').id,
        'key': 'RV011MAPFRE', 
    }, {
        'symbol_id': Symbol.objects.get(ticker='ibex35').id,
        'key': 'IB011IBEX35'
    }]
    for stocksource in stocksources:
        url_tpl = invertia_tpl.format(invertia_key=stocksource['key'])
        StockSource(name='invertia', symbol_id=stocksource['symbol_id'], url_tpl=url_tpl).save()

def runCommands(apps, schema_editor):
    call_command('import_ohlcv_csv')
    call_command('import_dividends')
    call_command('fetch_quotes_invertia')

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dividend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_date', models.DateField(null=True)),
                ('ex_date', models.DateField()),
                ('gross', models.FloatField()),
                ('net', models.FloatField(null=True)),
                ('type', models.CharField(blank=True, max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='KeyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=64)),
                ('key', models.CharField(max_length=64)),
                ('value', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Lang',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=64)),
                ('title', models.CharField(max_length=64)),
                ('html_above', models.TextField(blank=True)),
                ('lang_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.Lang')),
            ],
        ),
        migrations.CreateModel(
            name='StockQuote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StockSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('url_tpl', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Symbol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=64)),
                ('market', models.CharField(max_length=64)),
            ],
        ),
        migrations.AddField(
            model_name='stocksource',
            name='symbol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.Symbol'),
        ),
        migrations.AddField(
            model_name='stockquote',
            name='symbol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.Symbol'),
        ),
        migrations.AlterUniqueTogether(
            name='keyvalue',
            unique_together=set([('category', 'key')]),
        ),
        migrations.AddField(
            model_name='dividend',
            name='symbol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.Symbol'),
        ),
        migrations.AlterUniqueTogether(
            name='stockquote',
            unique_together=set([('symbol', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='plot',
            unique_together=set([('lang_code', 'slug')]),
        ),
        migrations.AlterUniqueTogether(
            name='dividend',
            unique_together=set([('symbol', 'pay_date')]),
        ),
        migrations.RunPython(insertData, lambda *args: None),
        migrations.RunPython(runCommands, lambda *args: None)
    ]
